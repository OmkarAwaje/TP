import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
sns.set()
dataset = pd.read_csv('/content/Churn_Modelling.csv', index_col = 'RowNumber')
dataset.head()
X = df.iloc[:, 3:12]
X
Y = df.iloc[:, -1:]
Y
df1 = pd.get_dummies(X["Gender"], drop_first = True)
df2 = pd.get_dummies(X["Geography"], drop_first = True)
df2
X["Geography"].value_counts()
X = pd.concat([X, df1, df2], axis = 1)
X
X.drop(['Geography', 'Gender'], axis = 1, inplace = True)
X
from sklearn.preprocessing import StandardScaler     
sc = StandardScaler()
X = sc.fit_transform(X)
X
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(X, Y, test_size = 0.2, random_state = 40)
from keras.models import Sequential
from keras.layers import Dense, Dropout
classifier = Sequential()
classifier.add(Dense(6, activation = 'relu', input_shape = (X.shape[1], )))
classifier.add(Dropout(0.1))
classifier.add(Dense(6, activation = 'relu'))
classifier.add(Dropout(0.1))
classifier.add(Dense(1, activation = 'sigmoid'))
classifier.compile(optimizer = 'adam', loss = 'binary_crossentropy', metrics = ['accuracy'])
history = classifier.fit(x_train, y_train, batch_size = 32, epochs = 200, validation_split = 0.1, verbose = 
classifier.summary()
y_pred = classifier.predict(x_test)
from sklearn.metrics import confusion_matrix, accuracy_score
y_pred = (y_pred > 0.5).astype(int)
cm = confusion_matrix(y_test, y_pred)
cm
acc = accuracy_score(y_test, y_pred)
acc
